// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  User    User[]
  Paybill Paybill[]
}

model EphemeralUser {
  id         Int      @id @default(autoincrement())
  user_id    String   @unique
  created_at DateTime @default(now())
  is_active  Boolean  @default(false)
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  name          String
  companyId     Int?
  company       Company?       @relation(fields: [companyId], references: [id])
  is_admin      Boolean        @default(false)
  is_active     Boolean        @default(false)
  user_id       String?        @unique
  notifications Notification[]
  chats         Chat[]
  Message       Message[]
  Ticket        Ticket[]
}

model Ticket {
  id               Int       @id @default(autoincrement())
  transaction_date DateTime
  reference        String    @unique
  safaricom_no     String
  name             String
  paybill_no       String
  airtel_no        String
  issue            String
  amount           Float
  a_info           String?
  urgency          URGENCY   @default(D)
  created_at       DateTime  @default(now())
  resolved_at      DateTime?
  status           STATUS    @default(O)
  company          String?
  creator          String?
  deleted          Boolean   @default(false)
  User             User?     @relation(fields: [userId], references: [id])
  userId           Int?
  Chat             Chat[]
}

model Chat {
  id              Int       @id @default(autoincrement())
  userId          Int?
  user            User?     @relation(fields: [userId], references: [id])
  ticketId        Int?
  ticket          Ticket?   @relation(fields: [ticketId], references: [id])
  created_at      DateTime  @default(now())
  session_user_id String?
  messages        Message[]
}

model Message {
  id         Int      @id @default(autoincrement())
  toUserId   Int?
  toUser     User?    @relation(fields: [toUserId], references: [id])
  message    String
  created_at DateTime @default(now())
  chatId     Int
  chat       Chat     @relation(fields: [chatId], references: [id])
  opened     Boolean  @default(false)
}

model Paybill {
  id        Int     @id @default(autoincrement())
  number    Int
  companyId Int
  company   Company @relation(fields: [companyId], references: [id])
}

model Notification {
  id         Int               @id @default(autoincrement())
  type       NOTIFICATION_TYPE
  message    String
  created_at DateTime          @default(now())
  opened     Boolean           @default(false)
  user       String?
  User       User?             @relation(fields: [userId], references: [id])
  userId     Int?
}

enum CHOICES {
  EA // Excess Airtime
  BWN // Buying To Wrong Number
  NC // Not Credited
  O // Others
}

enum STATUS {
  P // Pending
  R // Resolved
  C // Closed
  O // Opened
}

enum URGENCY {
  D // Default
  U // Urgent
  E // Emergency
}

enum NOTIFICATION_TYPE {
  T // New Ticket
  N // New Notification
}
